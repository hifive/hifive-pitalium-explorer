<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.10">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH_NAME</name>
          <description></description>
          <defaultValue>dev</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>IVY_PROXY_HOST</name>
          <description>ivy実行時のプロキシのホスト</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>IVY_PROXY_PORT</name>
          <description>ivy実行時のプロキシのポート</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>IVY_PROXY_USER</name>
          <description>ivy実行時のプロキシの認証ユーザ名</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>IVY_PROXY_PASSWORD</name>
          <description>ivy実行時のプロキシの認証パスワード</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BACKUP_PATH</name>
          <description>&lt;EMPTY&gt;: not copy
&lt;Relative path&gt;: not recommended!</description>
          <defaultValue>C:\pitalium-explorer.war</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>HIFIVE_RES_HOME</name>
          <description></description>
          <defaultValue>C:/hifive/workspace/hifive-res</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.30">
    <script>/**
 * pitalium-explorer
 */
node {
	stage(&apos;レジカウンター&apos;)
    deleteDir()
    git(
        branch: BRANCH_NAME,
        url: &apos;https://github.com/hifive/hifive-pitalium-explorer.git&apos;
    )

    // Overwrite with new hifive-res_home&apos;s value
    setResourceHomePath(pwd() + &apos;/pitalium-explorer/build.properties&apos;)

    // Checkout hifive-res
    dir(HIFIVE_RES_HOME) {
        git(
            branch: &apos;master&apos;,
            url: &apos;https://github.com/hifive/hifive-res.git&apos;
        )
    }

	stage(&apos;ライブラリをダウンロード&apos;)
	def antHome = tool(name: &apos;Default_Ant&apos;)
    withEnv([&quot;ANT_OPTS=-Dhttp.proxyHost=${IVY_PROXY_HOST} -Dhttp.proxyPort=${IVY_PROXY_PORT} -Dhttp.proxyUser=${IVY_PROXY_USER} -Dhttp.proxyPassword=${IVY_PROXY_PASSWORD}&quot;]) {
        bat(&quot;${antHome}/bin/ant.bat -file pitalium-explorer/ivy_build.xml resolve &amp;&amp; exit %%ERRORLEVEL%%&quot;)
    }

	stage(&apos;ビルド + テスト + WARの生成&apos;)
    bat(&quot;${antHome}/bin/ant.bat -file pitalium-explorer/ci_build.xml clean test_instrument unit_test build-war &amp;&amp; exit %%ERRORLEVEL%%&quot;)
	// コンパイル済のソースコードを含むワークスペース全体を保存
	step(
		$class: &apos;JUnitResultArchiver&apos;,
		testResults: &apos;pitalium-explorer/target/work/test-reports/*.xml&apos;
	)

    stage(&apos;成果物の保存&apos;)
    if(BACKUP_PATH != &apos;&apos;) {
        bat(&quot;copy /Y pitalium-explorer\\build\\pitalium-explorer.war ${BACKUP_PATH} &amp;&amp; exit 0&quot;)
    }
}

/**
 * Set new hifive-res_home&apos;s value into build.properties 
 */
def setResourceHomePath(filePath) {
    // Read properties
	Properties props = new Properties()
    File propsFile = new File(filePath)
    props.load(propsFile.newDataInputStream())

    // Overwrite properties
    props.setProperty(&apos;hifive-res_home&apos;, HIFIVE_RES_HOME)
    props.store(propsFile.newWriter(), &apos;&apos;)
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
</flow-definition>