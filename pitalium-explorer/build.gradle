plugins {
	id('java')
	id('war')
}


repositories {
	mavenCentral()
}

ext {
	springVersion = '4.3.7.RELEASE'
	slf4jVersion = '1.7.25'
	log4j2Version = '2.8.1'
	hibernateVersion = '5.2.9.Final'

	bootstrapVersion = '3.3.6'
	jstreeVersion = '3.0.8'
}

version = '1.0.5'
sourceCompatibility = 1.7

tasks.withType(AbstractCompile).each {
	it.options.encoding = 'UTF-8'
}

dependencies {
	compile(fileTree(dir: 'lib', include: 'pitalium-*.jar'))

	compile("org.slf4j:slf4j-api:${slf4jVersion}")
	compile("org.slf4j:slf4j-ext:${slf4jVersion}")
	compile("com.fasterxml.jackson.core:jackson-databind:2.8.7")
	compile("org.apache.commons:commons-lang3:3.5")
	compile("org.springframework:spring-core:${springVersion}")
	compile("org.springframework:spring-beans:${springVersion}")
	compile("org.springframework:spring-aop:${springVersion}")
	compile("org.springframework:spring-expression:${springVersion}")
	compile("org.springframework:spring-context:${springVersion}")
	compile("org.springframework:spring-orm:${springVersion}")
	compile("org.springframework:spring-webmvc:${springVersion}")
	compile("org.springframework.data:spring-data-jpa:1.11.1.RELEASE")
	compile("org.hibernate:hibernate-core:${hibernateVersion}")
	compile("org.hibernate:hibernate-entitymanager:${hibernateVersion}")
	compile("joda-time:joda-time:2.9.9")
	compile("commons-fileupload:commons-fileupload:1.3.2")
	compile("aopalliance:aopalliance:1.0")
	compile("dom4j:dom4j:1.6.1") {
		exclude(module: 'xml-apis')
	}
	compile("ch.qos.cal10n:cal10n-api:0.8.1")
	compile("org.jboss.logging:jboss-logging-annotations:2.0.2.Final")
	compile("javax.validation:validation-api:1.1.0.Final")

	// From Pitalium
	compile("junit:junit:4.12")
	compile("org.seleniumhq.selenium:selenium-support:3.4.0")
	compile("commons-io:commons-io:2.5")

	runtime("org.hsqldb:hsqldb:2.3.4")

	providedCompile("javax.servlet:javax.servlet-api:3.1.0")

	testCompile("org.springframework:spring-test:${springVersion}")
	testCompile("org.mockito:mockito-all:1.10.19")

	testRuntime("org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}")
	testRuntime("org.apache.logging.log4j:log4j-core:${log4j2Version}")
}

war {
	into('lib') {
		from(hifiveResHome)

		include("ext/bootstrap/${bootstrapVersion}/**")
		include("ext/jqplugins/jstree/${jstreeVersion}/**")
		include("ext/jquery/jquery-2.js")

		include("fw/current/ejs-h5mod.js")
		include("fw/current/h5.js")
		include("fw/current/h5.css")
	}
}

